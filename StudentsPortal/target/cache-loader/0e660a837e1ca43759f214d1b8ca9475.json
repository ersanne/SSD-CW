{"remainingRequest":"/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/thread-loader/dist/cjs.js??ref--10-2!/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/ts-loader/index.js??ref--10-3!/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/angular-router-loader/src/index.js!/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/tslint-loader/index.js!/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/src/main/webapp/app/entities/enrollment/enrollment.route.ts","dependencies":[{"path":"/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/src/main/webapp/app/entities/enrollment/enrollment.route.ts","mtime":1533571948285},{"path":"/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar core_2 = require(\"app/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar enrollment_model_1 = require(\"app/shared/model/enrollment.model\");\nvar enrollment_service_1 = require(\"./enrollment.service\");\nvar enrollment_component_1 = require(\"./enrollment.component\");\nvar enrollment_detail_component_1 = require(\"./enrollment-detail.component\");\nvar enrollment_update_component_1 = require(\"./enrollment-update.component\");\nvar enrollment_delete_dialog_component_1 = require(\"./enrollment-delete-dialog.component\");\nvar EnrollmentResolve = /** @class */ (function () {\n    function EnrollmentResolve(service) {\n        this.service = service;\n    }\n    EnrollmentResolve.prototype.resolve = function (route, state) {\n        var id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(operators_1.map(function (enrollment) { return enrollment.body; }));\n        }\n        return rxjs_1.of(new enrollment_model_1.Enrollment());\n    };\n    EnrollmentResolve = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof enrollment_service_1.EnrollmentService !== \"undefined\" && enrollment_service_1.EnrollmentService) === \"function\" && _a || Object])\n    ], EnrollmentResolve);\n    return EnrollmentResolve;\n    var _a;\n}());\nexports.EnrollmentResolve = EnrollmentResolve;\nexports.enrollmentRoute = [\n    {\n        path: 'enrollment',\n        component: enrollment_component_1.EnrollmentComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Enrollments'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'enrollment/:id/view',\n        component: enrollment_detail_component_1.EnrollmentDetailComponent,\n        resolve: {\n            enrollment: EnrollmentResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Enrollments'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'enrollment/new',\n        component: enrollment_update_component_1.EnrollmentUpdateComponent,\n        resolve: {\n            enrollment: EnrollmentResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Enrollments'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'enrollment/:id/edit',\n        component: enrollment_update_component_1.EnrollmentUpdateComponent,\n        resolve: {\n            enrollment: EnrollmentResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Enrollments'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    }\n];\nexports.enrollmentPopupRoute = [\n    {\n        path: 'enrollment/:id/delete',\n        component: enrollment_delete_dialog_component_1.EnrollmentDeletePopupComponent,\n        resolve: {\n            enrollment: EnrollmentResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Enrollments'\n        },\n        canActivate: [core_2.UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n",{"version":3,"file":"/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/src/main/webapp/app/entities/enrollment/enrollment.route.ts","sourceRoot":"","sources":["/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/angular-router-loader/src/index.js!/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/node_modules/tslint-loader/index.js!/home/student/Secure-Software-Development-Module-Coursework/StudentsPortal/src/main/webapp/app/entities/enrollment/enrollment.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAA0B;AAC1B,4CAAqC;AACrC,sEAA+D;AAC/D,2DAAyD;AACzD,+DAA6D;AAC7D,6EAA0E;AAC1E,6EAA0E;AAC1E,2FAAsF;AAItF;IACI,2BAAoB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;IAAG,CAAC;IAElD,mCAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAG,CAAC,UAAC,UAAoC,IAAK,OAAA,UAAU,CAAC,IAAI,EAAf,CAAe,CAAC,CAAC,CAAC;QACtG,CAAC;QACD,MAAM,CAAC,SAAE,CAAC,IAAI,6BAAU,EAAE,CAAC,CAAC;IAChC,CAAC;IATQ,iBAAiB;QAD7B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,sCAAiB,oBAAjB,sCAAiB;OADrC,iBAAiB,CAU7B;IAAD,wBAAC;;CAAA,AAVD,IAUC;AAVY,8CAAiB;AAYjB,QAAA,eAAe,GAAW;IACnC;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,0CAAmB;QAC9B,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,aAAa;SAC3B;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,uDAAyB;QACpC,OAAO,EAAE;YACL,UAAU,EAAE,iBAAiB;SAChC;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,aAAa;SAC3B;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,uDAAyB;QACpC,OAAO,EAAE;YACL,UAAU,EAAE,iBAAiB;SAChC;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,aAAa;SAC3B;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,uDAAyB;QACpC,OAAO,EAAE;YACL,UAAU,EAAE,iBAAiB;SAChC;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,aAAa;SAC3B;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC;AAEW,QAAA,oBAAoB,GAAW;IACxC;QACI,IAAI,EAAE,uBAAuB;QAC7B,SAAS,EAAE,mEAA8B;QACzC,OAAO,EAAE;YACL,UAAU,EAAE,iBAAiB;SAChC;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,aAAa;SAC3B;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAClB;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\nimport { UserRouteAccessService } from 'app/core';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Enrollment } from 'app/shared/model/enrollment.model';\nimport { EnrollmentService } from './enrollment.service';\nimport { EnrollmentComponent } from './enrollment.component';\nimport { EnrollmentDetailComponent } from './enrollment-detail.component';\nimport { EnrollmentUpdateComponent } from './enrollment-update.component';\nimport { EnrollmentDeletePopupComponent } from './enrollment-delete-dialog.component';\nimport { IEnrollment } from 'app/shared/model/enrollment.model';\n\n@Injectable({ providedIn: 'root' })\nexport class EnrollmentResolve implements Resolve<IEnrollment> {\n    constructor(private service: EnrollmentService) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(map((enrollment: HttpResponse<Enrollment>) => enrollment.body));\n        }\n        return of(new Enrollment());\n    }\n}\n\nexport const enrollmentRoute: Routes = [\n    {\n        path: 'enrollment',\n        component: EnrollmentComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Enrollments'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'enrollment/:id/view',\n        component: EnrollmentDetailComponent,\n        resolve: {\n            enrollment: EnrollmentResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Enrollments'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'enrollment/new',\n        component: EnrollmentUpdateComponent,\n        resolve: {\n            enrollment: EnrollmentResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Enrollments'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'enrollment/:id/edit',\n        component: EnrollmentUpdateComponent,\n        resolve: {\n            enrollment: EnrollmentResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Enrollments'\n        },\n        canActivate: [UserRouteAccessService]\n    }\n];\n\nexport const enrollmentPopupRoute: Routes = [\n    {\n        path: 'enrollment/:id/delete',\n        component: EnrollmentDeletePopupComponent,\n        resolve: {\n            enrollment: EnrollmentResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Enrollments'\n        },\n        canActivate: [UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n"]}]}